.mainContainer {

  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;



}






.genericIcon {
    color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-2));
    margin-right: var(--mantine-spacing-sm);
    width: rem(25px);
    height: rem(25px);
  }



/* Hide scrollbar for Chrome, Safari and Opera */
.noScroll::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.noScroll {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

.wordInfoFull{


  @media (max-width: 600px) {
    width: 100vw; /* 100% of the viewport width */
    padding-right: 0px;
  }
}

.wordInfoHalf{
  

  @media (max-width: 600px) {
    margin-top: 0px;


  }
}

.readingButton {
  color: light-dark(var(--mantine-color-gray-9), var(--mantine-color-dark-1));
  background-color: transparent;

}


.readingButton:hover {
  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-3)); /* Adjust the colors as needed */
  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));

}



.navbarBox {
  flex: 0 0 auto; /* Prevent navbar from shrinking */
  transition: width 0.5s ease; /* Add a smooth transition for width changes */
  /* Default width (adjust as needed) */



  @media (min-width: 700px) {
    height: 100%;
  }



}
    


.textDisplay {


  @media (max-width: 1000px) {
    padding-left: 0px;
    padding-right: 0px;
  }

}

.textClickable {

  /*cursor: pointer;*/
  letter-spacing: 0.01em;

}

.loaderContainer {
  display: flex;
  justify-content: center;
  align-items: center;
}



.additionalWord {

  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-2));

}


.additionalWord:hover {
  color: light-dark(var(--mantine-color-gray-8), var(--mantine-color-dark-4)); /* Adjust the colors as needed */
}

.chevronButton {
  position: sticky !important;
  z-index: 10;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  float: right;
  top: - 40px;
  background-color: var(--mantine-color-body) ; /* Uses Mantine's body background color */
  border-radius: 50%;
  box-shadow: 0 0 0px rgba(0, 0, 0, 0.1);
  margin-left: 8px; /* Add some space from the text */
  color: light-dark(var(--mantine-color-dark-3), var(--mantine-color-dark-1)); /* Adjust the colors as needed */
  border: 1px solid light-dark(var(--mantine-color-gray-4), var(--mantine-color-dark-1)); /* Add border */
  transition-duration: 200ms;
  cursor: pointer;

}
.chevronContainer {
  position: sticky !important;
  z-index: 10;
  transition: all 0.3s ease;
  float: right;
  top: 40px;
  right: 10px;







}


/* Desktop chevron animation */
.chevronButton svg {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.chevronButton:hover {
  background-color: var(--mantine-color-gray-0);
  transform: scale(1.1);
}

.chevronButton[data-rotated="true"] svg {
  transform: rotate(180deg);
}

/* Mobile chevron animation */
@media (max-width: 768px) {
  .chevronButton svg {
    transform: rotate(0deg);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .chevronButton[data-rotated="true"] svg {
    transform: rotate(180deg);
  }
}

/* Word info panel sliding animation */
.wordInfoTransition {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}



.scrollContainer {
  /* Enable smooth scrolling */
  scroll-behavior: smooth;
  /* Base styles */
  height: 100%;
  width: 100%;
  overflow-y: auto;
  /* Firefox scrollbar style */
  scrollbar-width: thin;
  scrollbar-color: transparent transparent;
  /* Transition for showing/hiding scrollbar */
  transition: scrollbar-color 0.3s ease;
  padding-right: 2px;
  @media (max-width: 1000px) { /* Adjust padding for mobile to create a small buffer for the navbar*/
    padding-left: 5px;
    padding-right: 5px;
  }

}

/* Hover state for Firefox */
.scrollContainer:hover {
  scrollbar-color: light-dark(var(--mantine-color-lightscale-8), var(--mantine-color-gray-4)) transparent;
}

/* WebKit (Chrome, Safari, newer Edge) scrollbar styles */
.scrollContainer::-webkit-scrollbar {
  width: 8px;
}

.scrollContainer::-webkit-scrollbar-track {
  background: transparent;
}

.scrollContainer::-webkit-scrollbar-thumb {
  background-color: transparent;
  border-radius: 4px;
  transition: background-color 0.3s ease;
}

/* Show scrollbar on hover */
.scrollContainer:hover::-webkit-scrollbar-thumb {
  background-color: light-dark(var(--mantine-color-lightscale-8), var(--mantine-color-gray-5));
}

/* Darker color when hovering directly over the scrollbar */
.scrollContainer:hover::-webkit-scrollbar-thumb:hover {
  background-color: light-dark(var(--mantine-color-lightscale-8), var(--mantine-color-gray-3));
}

/* Darker color when hovering directly over the scrollbar 

*{
  border: 0.5px solid rgba(255, 0, 0, 0.1);}

 */


.fadeContainer {
  position: relative;
  min-height: 100%;
}

.fadeContainer::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 20px; /* Adjust height of fade */
  background: linear-gradient(
    to bottom,
    transparent,
    var(--mantine-color-body) 90%
  );
  pointer-events: none; /* Allows clicking through the fade */
  opacity: 0.8; /* Subtle fade */
}

/* Optional: Disable fade effect when content is being scrolled */
.scrollContainer:active .fadeContainer::after,
.scrollContainer:focus-within .fadeContainer::after {
  opacity: 0;
  transition: opacity 0.3s ease;
}


.topFadeContainer {
  position: relative;
  min-height: 100%;
}

.topFadeContainer::after {
  content: '';
  position: absolute;
  top: 0; /* Change from bottom to top */
  left: 0;
  right: 0;
  height: 20px; /* Adjust height of fade */
  background: linear-gradient(
    to bottom, /* Change direction to bottom */
    var(--mantine-color-body) 10%, /* Less pronounced fade */
    transparent
  );
  pointer-events: none; /* Allows clicking through the fade */
  opacity: 0.5; /* Less pronounced fade */
}

/* Optional: Disable fade effect when content is being scrolled */
.scrollContainer:active .topFadeContainer::after,
.scrollContainer:focus-within .topFadeContainer::after {
  opacity: 0;
  transition: opacity 0.3s ease;
}



.contentBox {

  margin-top: 56px; /* Header height */
  height: calc(100vh - 56px);
}

